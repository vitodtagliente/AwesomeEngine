// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#pragma once

#include <vdtproto/runtime.h>

#include "connect_command.h"
#include "disconnect_command.h"
#include "ping_command.h"
#include "update_world_command.h"

namespace net
{
namespace command
{

class ConnectCommandType
{
public:
    ConnectCommandType() = delete;

    static const TypeDescriptor& descriptor();
    static fields_t fields(const ConnectCommand* const pointer);

private:
    static TypeDescriptor s_typeDescriptor;
    static void registerTypeDescriptor(TypeDescriptor*);
};

class DisconnectCommandType
{
public:
    DisconnectCommandType() = delete;

    static const TypeDescriptor& descriptor();
    static fields_t fields(const DisconnectCommand* const pointer);

private:
    static TypeDescriptor s_typeDescriptor;
    static void registerTypeDescriptor(TypeDescriptor*);
};

class PingCommandType
{
public:
    PingCommandType() = delete;

    static const TypeDescriptor& descriptor();
    static fields_t fields(const PingCommand* const pointer);

private:
    static TypeDescriptor s_typeDescriptor;
    static void registerTypeDescriptor(TypeDescriptor*);
};

class UpdateWorldCommandType
{
public:
    UpdateWorldCommandType() = delete;

    static const TypeDescriptor& descriptor();
    static fields_t fields(const UpdateWorldCommand* const pointer);

private:
    static TypeDescriptor s_typeDescriptor;
    static void registerTypeDescriptor(TypeDescriptor*);
};

} // namespace command
} // namespace net
