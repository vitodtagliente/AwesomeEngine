// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#pragma once

#include <vdtproto/runtime.h>

enum class NetMode : int
{
    Client = 0,
    Shared = 1,
    Server = 2,
};

template <>
struct EnumType<NetMode>
{
    static const char* name() { return "NetMode"; }
    static const std::map<const char*, int> values()
    {
        static std::map<const char*, int> s_values {
            { "Client", static_cast<int>(NetMode::Client) },
            { "Shared", static_cast<int>(NetMode::Shared) },
            { "Server", static_cast<int>(NetMode::Server) },
        };
        return s_values;
    }
};

