// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "control.h"

const meta_t& Control::getTypeMeta() const { return ControlType::type().meta; }
const std::string& Control::getTypeName() const { return ControlType::type().name; }
const properties_t Control::getTypeProperties() const {
    properties_t properties = Entity::getTypeProperties();
    return properties;
}
std::size_t Control::getTypeSize() const { return ControlType::type().size; }

const TypeDefinition& ControlType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new Control(); }, "Control", {
        std::make_pair("Type", "Entity"),
    }, sizeof(Control));
    return s_typeDefinition;
}
