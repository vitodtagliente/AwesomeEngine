// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#pragma once

#include <vdtreflect/runtime.h>

template <>
struct EnumType<enum class ApplicationMode>
{
    static const char* name();
    static const std::map<const char*, int> values();
};

template <>
struct EnumType<enum class FpsMode>
{
    static const char* name();
    static const std::map<const char*, int> values();
};

struct ApplicationSettingsType : RegisteredInTypeFactory<ApplicationSettingsType>
{
    ApplicationSettingsType() = delete;

    static const TypeDefinition& type();
    static bool registered() { return value; };
};

