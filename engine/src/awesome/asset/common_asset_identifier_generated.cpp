// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "common_asset_identifier.h"

const meta_t& CommonAssetIdentifier::getTypeMeta() const { return __CommonAssetIdentifierType::type().meta; }
const std::string& CommonAssetIdentifier::getTypeName() const { return __CommonAssetIdentifierType::type().name; }
const properties_t CommonAssetIdentifier::getTypeProperties() const {
    properties_t properties = AssetIdentifier::getTypeProperties();
    return properties;
}
std::size_t CommonAssetIdentifier::getTypeSize() const { return __CommonAssetIdentifierType::type().size; }
const meta_t& CommonAssetIdentifier::staticTypeMeta() { return __CommonAssetIdentifierType::type().meta; }
const std::string& CommonAssetIdentifier::staticTypeName() { return __CommonAssetIdentifierType::type().name; }

const TypeDefinition& __CommonAssetIdentifierType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new CommonAssetIdentifier(); }, "CommonAssetIdentifier", {
        std::make_pair("Type", "AssetIdentifier"),
    }, sizeof(CommonAssetIdentifier));
    return s_typeDefinition;
}
