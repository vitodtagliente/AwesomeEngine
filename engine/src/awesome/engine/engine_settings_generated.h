// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#pragma once

#include <vdtreflect/runtime.h>

template <>
struct EnumType<enum class EngineMode>
{
    static const char* name();
    static const  enum_values_t& values();
};

struct __EngineModeEnum : RegisteredInEnumFactory<enum class EngineMode>
{
    static bool registered() { return value; };
};

template <>
struct EnumType<enum class FpsMode>
{
    static const char* name();
    static const  enum_values_t& values();
};

struct __FpsModeEnum : RegisteredInEnumFactory<enum class FpsMode>
{
    static bool registered() { return value; };
};

struct __EngineSettingsType : RegisteredInTypeFactory<__EngineSettingsType>
{
    __EngineSettingsType() = delete;

    static const TypeDefinition& type();
    static bool registered() { return value; };
};

