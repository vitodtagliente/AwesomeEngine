// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "sprite_renderer_component.h"

const type_meta_t& Type<SpriteRendererComponent>::meta()
{
    static type_meta_t s_meta {
    };
    return s_meta;
}
const char* const Type<SpriteRendererComponent>::name() { return "SpriteRendererComponent"; }

const type_properties_t& Type<SpriteRendererComponent>::properties()
{
    static type_properties_t s_properties {
        // Parent class Component properties
        { "enabled", Property{ offsetof(SpriteRendererComponent, enabled), type_meta_t { }, "enabled", NativeType{ "bool", {  }, NativeType::DecoratorType::D_raw, sizeof(bool), NativeType::Type::T_bool } } },
        { "m_id", Property{ offsetof(SpriteRendererComponent, m_id), type_meta_t { }, "m_id", NativeType{ "uuid", {  }, NativeType::DecoratorType::D_raw, sizeof(uuid), NativeType::Type::T_unknown } } },
        // Properties
        { "color", Property{ offsetof(SpriteRendererComponent, color), type_meta_t { }, "color", NativeType{ "graphics::Color", {  }, NativeType::DecoratorType::D_raw, sizeof(graphics::Color), NativeType::Type::T_unknown } } },
        { "flipX", Property{ offsetof(SpriteRendererComponent, flipX), type_meta_t { }, "flipX", NativeType{ "bool", {  }, NativeType::DecoratorType::D_raw, sizeof(bool), NativeType::Type::T_bool } } },
        { "flipY", Property{ offsetof(SpriteRendererComponent, flipY), type_meta_t { }, "flipY", NativeType{ "bool", {  }, NativeType::DecoratorType::D_raw, sizeof(bool), NativeType::Type::T_bool } } },
        { "image", Property{ offsetof(SpriteRendererComponent, image), type_meta_t { }, "image", NativeType{ "ImageAssetPtr", {  }, NativeType::DecoratorType::D_raw, sizeof(ImageAssetPtr), NativeType::Type::T_unknown } } },
        { "rect", Property{ offsetof(SpriteRendererComponent, rect), type_meta_t { }, "rect", NativeType{ "graphics::TextureRect", {  }, NativeType::DecoratorType::D_raw, sizeof(graphics::TextureRect), NativeType::Type::T_unknown } } },
    };
    return s_properties;
}

const type_meta_t& SpriteRendererComponent::type_meta() const { return Type<SpriteRendererComponent>::meta(); }
const char* const SpriteRendererComponent::type_name() const { return Type<SpriteRendererComponent>::name(); }
const type_properties_t& SpriteRendererComponent::type_properties() const { return Type<SpriteRendererComponent>::properties(); }

