// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "menu_item.h"

const meta_t& MenuItem::getTypeMeta() const { return MenuItemType::meta(); }
const char* MenuItem::getTypeName() const { return MenuItemType::name(); }
const properties_t MenuItem::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties;
    return properties;
}
std::size_t MenuItem::getTypeSize() const { return sizeof(MenuItem); }

MenuItemType::MenuItemType()
{
    TypeFactoryRegister::load(MenuItemType::name(), []() -> const meta_t& { return MenuItemType::meta(); }, []() -> IType* { return MenuItemType::instantiate(); });
}

MenuItem* const MenuItemType::instantiate()
{
    return new MenuItem();
}

const meta_t& MenuItemType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* MenuItemType::name() { return "MenuItem"; }

