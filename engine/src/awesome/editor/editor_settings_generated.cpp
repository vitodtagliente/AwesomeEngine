// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "editor_settings.h"

const meta_t& EditorSettings::getTypeMeta() const { return EditorSettingsType::type().meta; }
const std::string& EditorSettings::getTypeName() const { return EditorSettingsType::type().name; }
const properties_t EditorSettings::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties;
    properties.insert(std::make_pair<std::string, Property>("renderWindows", Property("renderWindows", Property::TypeDescriptor("bool", Property::Type::T_bool, Property::DecoratorType::D_normalized, {}), sizeof(bool), origin + offsetof(EditorSettings, renderWindows), {
    })));
    return properties;
}
std::size_t EditorSettings::getTypeSize() const { return EditorSettingsType::type().size; }

const TypeDefinition& EditorSettingsType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new EditorSettings(); }, "EditorSettings", {
    }, sizeof(EditorSettings));
    return s_typeDefinition;
}
