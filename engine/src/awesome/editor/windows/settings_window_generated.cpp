// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "settings_window.h"

const meta_t& SettingsWindow::getTypeMeta() const { return __SettingsWindowType::type().meta; }
const std::string& SettingsWindow::getTypeName() const { return __SettingsWindowType::type().name; }
const properties_t SettingsWindow::getTypeProperties() const {
    properties_t properties = Window::getTypeProperties();
    return properties;
}
std::size_t SettingsWindow::getTypeSize() const { return __SettingsWindowType::type().size; }
const meta_t& SettingsWindow::staticTypeMeta() { return __SettingsWindowType::type().meta; }
const std::string& SettingsWindow::staticTypeName() { return __SettingsWindowType::type().name; }

const TypeDefinition& __SettingsWindowType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new SettingsWindow(); }, "SettingsWindow", {
        std::make_pair("Type", "Window"),
    }, sizeof(SettingsWindow));
    return s_typeDefinition;
}
