// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "sprite_animator.h"

const meta_t& SpriteAnimator::getTypeMeta() const { return SpriteAnimatorType::meta(); }
const char* SpriteAnimator::getTypeName() const { return SpriteAnimatorType::name(); }
const properties_t SpriteAnimator::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t SpriteAnimator::getTypeSize() const { return sizeof(SpriteAnimator); }

SpriteAnimatorType::SpriteAnimatorType()
{
    TypeFactoryRegister::load(SpriteAnimatorType::name(), []() -> const meta_t& { return SpriteAnimatorType::meta(); }, []() -> IType* { return SpriteAnimatorType::instantiate(); });
}

SpriteAnimator* const SpriteAnimatorType::instantiate()
{
    return new SpriteAnimator();
}

const meta_t& SpriteAnimatorType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* SpriteAnimatorType::name() { return "SpriteAnimator"; }

SpriteAnimatorType __spriteanimator_type;

