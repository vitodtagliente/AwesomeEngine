// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "sprite_animator_component.h"

const meta_t& SpriteAnimatorComponent::getTypeMeta() const { return SpriteAnimatorComponentType::meta(); }
const char* SpriteAnimatorComponent::getTypeName() const { return SpriteAnimatorComponentType::name(); }
const properties_t SpriteAnimatorComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t SpriteAnimatorComponent::getTypeSize() const { return sizeof(SpriteAnimatorComponent); }

SpriteAnimatorComponentType::SpriteAnimatorComponentType()
{
    TypeFactoryRegister::load(SpriteAnimatorComponentType::name(), []() -> const meta_t& { return SpriteAnimatorComponentType::meta(); }, []() -> IType* { return SpriteAnimatorComponentType::instantiate(); });
}

SpriteAnimatorComponent* const SpriteAnimatorComponentType::instantiate()
{
    return new SpriteAnimatorComponent();
}

const meta_t& SpriteAnimatorComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* SpriteAnimatorComponentType::name() { return "SpriteAnimatorComponent"; }

SpriteAnimatorComponentType __spriteanimatorcomponent_type;

