// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "gizmos_renderer_component.h"

const meta_t& GizmosRendererComponent::getTypeMeta() const { return GizmosRendererComponentType::meta(); }
const char* GizmosRendererComponent::getTypeName() const { return GizmosRendererComponentType::name(); }
const properties_t GizmosRendererComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("type", Property("type", NativeType::NT_int, "int", sizeof(int), origin + offsetof(GizmosRendererComponent, type), {
    })));
    properties.insert(std::make_pair<std::string, Property>("color", Property("color", NativeType::NT_int, "int", sizeof(int), origin + offsetof(GizmosRendererComponent, color), {
    })));
    return properties;
}
std::size_t GizmosRendererComponent::getTypeSize() const { return sizeof(GizmosRendererComponent); }

GizmosRendererComponentType::GizmosRendererComponentType()
{
    TypeFactoryRegister::load(GizmosRendererComponentType::name(), []() -> const meta_t& { return GizmosRendererComponentType::meta(); }, []() -> IType* { return GizmosRendererComponentType::instantiate(); });
}

GizmosRendererComponent* const GizmosRendererComponentType::instantiate()
{
    return new GizmosRendererComponent();
}

const meta_t& GizmosRendererComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* GizmosRendererComponentType::name() { return "GizmosRendererComponent"; }

GizmosRendererComponentType __gizmosrenderercomponent_type;

