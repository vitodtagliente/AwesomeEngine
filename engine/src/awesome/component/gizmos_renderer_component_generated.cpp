// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "gizmos_renderer_component.h"

const meta_t& GizmosRendererComponent::getTypeMeta() const { return GizmosRendererComponentType::type().meta; }
const std::string& GizmosRendererComponent::getTypeName() const { return GizmosRendererComponentType::type().name; }
const properties_t GizmosRendererComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("type", Property("type", Property::TypeDescriptor("ShapeType", Property::Type::T_custom_enum, Property::DecoratorType::D_normalized, {}), sizeof(ShapeType), origin + offsetof(GizmosRendererComponent, type), {
        std::make_pair("IsEnum", ""),
    })));
    properties.insert(std::make_pair<std::string, Property>("color", Property("color", Property::TypeDescriptor("graphics::Color", Property::Type::T_unknown, Property::DecoratorType::D_normalized, {}), sizeof(graphics::Color), origin + offsetof(GizmosRendererComponent, color), {
    })));
    return properties;
}
std::size_t GizmosRendererComponent::getTypeSize() const { return GizmosRendererComponentType::type().size; }

const TypeDefinition& GizmosRendererComponentType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new GizmosRendererComponent(); }, "GizmosRendererComponent", {
        std::make_pair("Type", "Component"),
    }, sizeof(GizmosRendererComponent));
    return s_typeDefinition;
}
