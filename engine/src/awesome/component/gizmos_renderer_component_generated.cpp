// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "gizmos_renderer_component.h"

const meta_t& GizmosRendererComponent::getTypeMeta() const { return GizmosRendererComponentType::type().meta; }
const std::string& GizmosRendererComponent::getTypeName() const { return GizmosRendererComponentType::type().name; }
const properties_t GizmosRendererComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("type", Property("type", PropertyType::T_unknown, "Type", true, sizeof(Type), origin + offsetof(GizmosRendererComponent, type), {
    })));
    properties.insert(std::make_pair<std::string, Property>("color", Property("color", PropertyType::T_unknown, "graphics::Color", true, sizeof(graphics::Color), origin + offsetof(GizmosRendererComponent, color), {
    })));
    return properties;
}
std::size_t GizmosRendererComponent::getTypeSize() const { return GizmosRendererComponentType::type().size; }

const Type& GizmosRendererComponentType::type()
{
    static const Type s_type([]() -> IType* { return new GizmosRendererComponent(); }, "GizmosRendererComponent", {
        std::make_pair("Category", "Component"),
    }, sizeof(GizmosRendererComponent));
    return s_type;
}
