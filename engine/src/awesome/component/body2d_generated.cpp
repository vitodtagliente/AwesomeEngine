// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "body2d.h"

const meta_t& Body2d::getTypeMeta() const { return Body2dType::meta(); }
const char* Body2d::getTypeName() const { return Body2dType::name(); }
const properties_t Body2d::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t Body2d::getTypeSize() const { return sizeof(Body2d); }

Body2dType::Body2dType()
{
    TypeFactoryRegister::load(Body2dType::name(), []() -> const meta_t& { return Body2dType::meta(); }, []() -> IType* { return Body2dType::instantiate(); });
}

Body2d* const Body2dType::instantiate()
{
    return new Body2d();
}

const meta_t& Body2dType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* Body2dType::name() { return "Body2d"; }

Body2dType __body2d_type;

