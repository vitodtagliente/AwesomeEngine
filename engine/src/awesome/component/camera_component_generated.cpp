// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "camera_component.h"

const meta_t& CameraComponent::getTypeMeta() const { return CameraComponentType::type().meta; }
const std::string& CameraComponent::getTypeName() const { return CameraComponentType::type().name; }
const properties_t CameraComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("color", Property("color", Property::TypeDescriptor("graphics::Color", Property::Type::T_unknown, Property::DecoratorType::D_normalized, {}), sizeof(graphics::Color), origin + offsetof(CameraComponent, color), {
    })));
    return properties;
}
std::size_t CameraComponent::getTypeSize() const { return CameraComponentType::type().size; }

const TypeDefinition& CameraComponentType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new CameraComponent(); }, "CameraComponent", {
    }, sizeof(CameraComponent));
    return s_typeDefinition;
}
