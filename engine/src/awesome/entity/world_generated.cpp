// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "world.h"

const meta_t& World::getTypeMeta() const { return WorldType::type().meta; }
const std::string& World::getTypeName() const { return WorldType::type().name; }
const properties_t World::getTypeProperties() const {
    properties_t properties = Entity::getTypeProperties();
    return properties;
}
std::size_t World::getTypeSize() const { return WorldType::type().size; }

const TypeDefinition& WorldType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new World(); }, "World", {
        std::make_pair("Type", "World"),
    }, sizeof(World));
    return s_typeDefinition;
}
