// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "pawn_controller_component.h"

const meta_t& PawnControllerComponent::getTypeMeta() const { return PawnControllerComponentType::meta(); }
const char* PawnControllerComponent::getTypeName() const { return PawnControllerComponentType::name(); }
const properties_t PawnControllerComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t PawnControllerComponent::getTypeSize() const { return sizeof(PawnControllerComponent); }

PawnControllerComponentType::PawnControllerComponentType()
{
    TypeFactoryRegister::load(PawnControllerComponentType::name(), []() -> const meta_t& { return PawnControllerComponentType::meta(); }, []() -> IType* { return PawnControllerComponentType::instantiate(); });
}

PawnControllerComponent* const PawnControllerComponentType::instantiate()
{
    return new PawnControllerComponent();
}

const meta_t& PawnControllerComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* PawnControllerComponentType::name() { return "PawnControllerComponent"; }

