// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "pawn_controller_component.h"

const meta_t& PawnControllerComponent::getTypeMeta() const { return __PawnControllerComponentType::type().meta; }
const std::string& PawnControllerComponent::getTypeName() const { return __PawnControllerComponentType::type().name; }
const properties_t PawnControllerComponent::getTypeProperties() const {
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t PawnControllerComponent::getTypeSize() const { return __PawnControllerComponentType::type().size; }
const meta_t& PawnControllerComponent::staticTypeMeta() { return __PawnControllerComponentType::type().meta; }
const std::string& PawnControllerComponent::staticTypeName() { return __PawnControllerComponentType::type().name; }

const TypeDefinition& __PawnControllerComponentType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new PawnControllerComponent(); }, "PawnControllerComponent", {
        std::make_pair("Type", "Component"),
    }, sizeof(PawnControllerComponent));
    return s_typeDefinition;
}
