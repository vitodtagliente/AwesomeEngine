// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "health_component.h"

const meta_t& HealthComponent::getTypeMeta() const { return HealthComponentType::meta(); }
const char* HealthComponent::getTypeName() const { return HealthComponentType::name(); }
const properties_t HealthComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t HealthComponent::getTypeSize() const { return sizeof(HealthComponent); }

HealthComponentType::HealthComponentType()
{
    TypeFactoryRegister::load(HealthComponentType::name(), []() -> const meta_t& { return HealthComponentType::meta(); }, []() -> IType* { return HealthComponentType::instantiate(); });
}

HealthComponent* const HealthComponentType::instantiate()
{
    return new HealthComponent();
}

const meta_t& HealthComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* HealthComponentType::name() { return "HealthComponent"; }

HealthComponentType __healthcomponent_type;

