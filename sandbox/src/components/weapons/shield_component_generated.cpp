// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "shield_component.h"

const meta_t& ShieldComponent::getTypeMeta() const { return ShieldComponentType::type().meta; }
const std::string& ShieldComponent::getTypeName() const { return ShieldComponentType::type().name; }
const properties_t ShieldComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = WeaponComponent::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("m_color", Property("m_color", Property::TypeDescriptor("graphics::Color", Property::Type::T_unknown, Property::DecoratorType::D_normalized, {}), sizeof(graphics::Color), origin + offsetof(ShieldComponent, m_color), {
    })));
    return properties;
}
std::size_t ShieldComponent::getTypeSize() const { return ShieldComponentType::type().size; }

const TypeDefinition& ShieldComponentType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> Type* { return new ShieldComponent(); }, "ShieldComponent", {
        std::make_pair("Type", "Component"),
    }, sizeof(ShieldComponent));
    return s_typeDefinition;
}
