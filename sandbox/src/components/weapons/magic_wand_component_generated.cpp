// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "magic_wand_component.h"

const meta_t& MagicWandComponent::getTypeMeta() const { return MagicWandComponentType::type().meta; }
const std::string& MagicWandComponent::getTypeName() const { return MagicWandComponentType::type().name; }
const properties_t MagicWandComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = WeaponComponent::getTypeProperties();
    properties.insert(std::make_pair<std::string, Property>("m_bulletPrefab", Property("m_bulletPrefab", Property::TypeDescriptor("PrefabAssetPtr", Property::Type::T_unknown, Property::DecoratorType::D_normalized, {}), sizeof(PrefabAssetPtr), origin + offsetof(MagicWandComponent, m_bulletPrefab), {
    })));
    return properties;
}
std::size_t MagicWandComponent::getTypeSize() const { return MagicWandComponentType::type().size; }

const TypeDefinition& MagicWandComponentType::type()
{
    static const TypeDefinition s_typeDefinition([]() -> IType* { return new MagicWandComponent(); }, "MagicWandComponent", {
        std::make_pair("Category", "Component"),
    }, sizeof(MagicWandComponent));
    return s_typeDefinition;
}
