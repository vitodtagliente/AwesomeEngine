// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "lifetime_component.h"

const meta_t& LifetimeComponent::getTypeMeta() const { return LifetimeComponentType::meta(); }
const char* LifetimeComponent::getTypeName() const { return LifetimeComponentType::name(); }
const properties_t LifetimeComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t LifetimeComponent::getTypeSize() const { return sizeof(LifetimeComponent); }

LifetimeComponentType::LifetimeComponentType()
{
    TypeFactoryRegister::load(LifetimeComponentType::name(), []() -> const meta_t& { return LifetimeComponentType::meta(); }, []() -> IType* { return LifetimeComponentType::instantiate(); });
}

LifetimeComponent* const LifetimeComponentType::instantiate()
{
    return new LifetimeComponent();
}

const meta_t& LifetimeComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* LifetimeComponentType::name() { return "LifetimeComponent"; }

LifetimeComponentType __lifetimecomponent_type;

