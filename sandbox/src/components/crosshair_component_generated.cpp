// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "crosshair_component.h"

const meta_t& CrosshairComponent::getTypeMeta() const { return CrosshairComponentType::type().meta; }
const std::string& CrosshairComponent::getTypeName() const { return CrosshairComponentType::type().name; }
const properties_t CrosshairComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = Component::getTypeProperties();
    return properties;
}
std::size_t CrosshairComponent::getTypeSize() const { return CrosshairComponentType::type().size; }

const Type& CrosshairComponentType::type()
{
    static const Type s_type([]() -> IType* { return new CrosshairComponent(); }, "CrosshairComponent", {
    }, sizeof(CrosshairComponent));
    return s_type;
}
