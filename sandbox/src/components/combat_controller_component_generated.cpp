// Copyright (c) Vito Domenico Tagliente
// automatically generated by the compiler, do not modify
#include "combat_controller_component.h"

const meta_t& CombatControllerComponent::getTypeMeta() const { return CombatControllerComponentType::meta(); }
const char* CombatControllerComponent::getTypeName() const { return CombatControllerComponentType::name(); }
const properties_t CombatControllerComponent::getTypeProperties() const {
    member_address_t origin = reinterpret_cast<member_address_t>(this);
    properties_t properties = graphics::IGraphicsComponent::getTypeProperties();
    return properties;
}
std::size_t CombatControllerComponent::getTypeSize() const { return sizeof(CombatControllerComponent); }

CombatControllerComponentType::CombatControllerComponentType()
{
    TypeFactoryRegister::load(CombatControllerComponentType::name(), []() -> const meta_t& { return CombatControllerComponentType::meta(); }, []() -> IType* { return CombatControllerComponentType::instantiate(); });
}

CombatControllerComponent* const CombatControllerComponentType::instantiate()
{
    return new CombatControllerComponent();
}

const meta_t& CombatControllerComponentType::meta()
{
    static meta_t s_meta{
    };
    return s_meta;
}

const char* CombatControllerComponentType::name() { return "CombatControllerComponent"; }

CombatControllerComponentType __combatcontrollercomponent_type;

